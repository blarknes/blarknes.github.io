import{i as k,j as p,k as u,l as m}from"./scheduler.f76b625b.js";import{p as w,t as g,b as v,d as i}from"./index.7356150a.js";function R(c,t){const n=t.token={};function s(e,r,d,b){if(t.token!==n)return;t.resolved=b;let a=t.ctx;d!==void 0&&(a=a.slice(),a[d]=b);const l=e&&(t.current=e)(a);let _=!1;t.block&&(t.blocks?t.blocks.forEach((o,h)=>{h!==r&&o&&(w(),g(o,1,1,()=>{t.blocks[h]===o&&(t.blocks[h]=null)}),v())}):t.block.d(1),l.c(),i(l,1),l.m(t.mount(),t.anchor),_=!0),t.block=l,t.blocks&&(t.blocks[r]=l),_&&m()}if(k(c)){const e=p();if(c.then(r=>{u(e),s(t.then,1,t.value,r),u(null)},r=>{if(u(e),s(t.catch,2,t.error,r),u(null),!t.hasCatch)throw r}),t.current!==t.pending)return s(t.pending,0),!0}else{if(t.current!==t.then)return s(t.then,1,t.value,c),!0;t.resolved=c}}async function j(c){const t=await(await fetch(c)).blob();return new Promise(function(n,s){const e=new FileReader;e.readAsDataURL(t),e.onload=()=>n(e.result),e.onerror=r=>s("Error: "+r)})}export{R as h,j as p};
