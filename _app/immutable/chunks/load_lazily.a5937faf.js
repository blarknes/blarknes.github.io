import{i as k,h as p,j as u,k as m}from"./scheduler.e4596647.js";import{p as w,t as g,b as v,d as i}from"./index.eefd0cc9.js";function R(c,t){const n=t.token={};function s(e,r,d,b){if(t.token!==n)return;t.resolved=b;let l=t.ctx;d!==void 0&&(l=l.slice(),l[d]=b);const a=e&&(t.current=e)(l);let _=!1;t.block&&(t.blocks?t.blocks.forEach((o,h)=>{h!==r&&o&&(w(),g(o,1,1,()=>{t.blocks[h]===o&&(t.blocks[h]=null)}),v())}):t.block.d(1),a.c(),i(a,1),a.m(t.mount(),t.anchor),_=!0),t.block=a,t.blocks&&(t.blocks[r]=a),_&&m()}if(k(c)){const e=p();if(c.then(r=>{u(e),s(t.then,1,t.value,r),u(null)},r=>{if(u(e),s(t.catch,2,t.error,r),u(null),!t.hasCatch)throw r}),t.current!==t.pending)return s(t.pending,0),!0}else{if(t.current!==t.then)return s(t.then,1,t.value,c),!0;t.resolved=c}}async function j(c){const t=await(await fetch(c)).blob();return new Promise(function(n,s){const e=new FileReader;e.readAsDataURL(t),e.onload=()=>n(e.result),e.onerror=r=>s("Error: "+r)})}export{R as h,j as p};
